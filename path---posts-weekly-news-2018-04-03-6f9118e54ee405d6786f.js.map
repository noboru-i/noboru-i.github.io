{"version":3,"sources":["webpack:///path---posts-weekly-news-2018-04-03-6f9118e54ee405d6786f.js","webpack:///./.cache/json/posts-weekly-news-2018-04-03.json"],"names":["webpackJsonp","394","module","exports","data","site","siteMetadata","title","subtitle","copyright","author","name","twitter","disqusShortname","url","markdownRemark","id","html","fields","tagSlugs","frontmatter","tags","date","description","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,mBAAAC,SAAA,qBAAAC,UAAA,yBAAAC,QAA0GC,KAAA,WAAAC,QAAA,YAAuCC,gBAAA,GAAAC,IAAA,gCAA2DC,gBAAmBC,GAAA,+FAAAC,KAAA,inMAAwuKC,QAA4oCC,UAAA,6LAAwMC,aAAgBb,MAAA,4BAAAc,MAAA,wGAAAC,KAAA,2BAAAC,YAAA,2BAA8NC,aAAgBC,KAAA","file":"path---posts-weekly-news-2018-04-03-6f9118e54ee405d6786f.js","sourcesContent":["webpackJsonp([232255018994465],{\n\n/***/ 394:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Blog by noboru-i\",\"subtitle\":\"noboru-iのメモ的な何かです。\",\"copyright\":\"© All rights reserved.\",\"author\":{\"name\":\"noboru-i\",\"twitter\":\"noboru_i\"},\"disqusShortname\":\"\",\"url\":\"https://noboru-i.github.io/\"}},\"markdownRemark\":{\"id\":\"/home/circleci/code/src/pages/articles/2018/2018-04-03.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2>関数の話 - ( ꒪⌓꒪) ゆるよろ日記</h2>\\n<p><a href=\\\"http://yuroyoro.hatenablog.com/entry/2018/04/03/112830\\\">http://yuroyoro.hatenablog.com/entry/2018/04/03/112830</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n</ul>\\n<p>実際の業務で使わないとしても、関数型の思想に触れておくことは大事かも。</p>\\n<h2>kotlinでも検出できるCustom Lintを作成してみた - DMM inside</h2>\\n<p><a href=\\\"https://inside.dmm.com/entry/2018/04/03/kotlin-custom-lint\\\">https://inside.dmm.com/entry/2018/04/03/kotlin-custom-lint</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/android/\\\">Android</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/ci/\\\">CI</a>\\n  </li>\\n</ul>\\n<p>いろんな人とチームを組んで開発しようとすると、コードレビュー以前に機械的にチェックしたいものは増えてきますよね。\\nまた、Android標準のLintの仕組みに追加でき、Android Studio上に出てくるのは良いですね。</p>\\n<p>実装するためのおまじない？準備？はそんなに多くない印象で良いのですが、\\nPSIの構造を把握して、チェック処理実装に落とすのが難しそうな印象。</p>\\n<h2>九州商船の「弊社WEB予約サービスに対する不正アクセスに関する最終報告」は全てのエンジニアに読んでほしい - orangeitems’s diary</h2>\\n<p><a href=\\\"http://www.orangeitems.com/entry/2018/04/02/202052\\\">http://www.orangeitems.com/entry/2018/04/02/202052</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/security/\\\">security</a>\\n  </li>\\n</ul>\\n<blockquote>\\n<p>・不正アクセスは起こってみるとだいたいが稚拙なところを狙われている。技術的には高いレベルではない場合が多い。いわゆる戸締りを忘れたぐらいなレベル。しかし攻撃者は全部のドアを開けようとしてくるからタチが悪い。ドアを設けないのが一番のセキュリティー対策。</p>\\n</blockquote>\\n<p>大事ですよねー。</p>\\n<p>ただ、サービス止めたり、ログが多く出る設定にしたりってのは、サービス特性によっては難しい気がする。\\n（そもそも、そのへんの検討すらしてない、ってのはまずいでしょうけど。。）</p>\\n<p>にしても、「社外の専門家により構成される調査委員会を設置」とか、ちゃんとしてる感がすごい。固い系企業？のこういうところは見習わないといけないのかも。</p>\\n<h2>Vueを昔触った後Reactをどっぷり触ってもう一回Vueを触ってReactに戻って得た感想 – 📜inuscript🐶 – Medium</h2>\\n<p><a href=\\\"https://medium.com/inuscript/vue-and-react-comparision-6c7cb44f18ba\\\">https://medium.com/inuscript/vue-and-react-comparision-6c7cb44f18ba</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/frontend/\\\">Frontend</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/react/\\\">React</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/vue.js/\\\">Vue.js</a>\\n  </li>\\n</ul>\\n<blockquote>\\n<p>誤解を恐れずに言うと、Reactはsimple寄りで、Vueはeasy寄りというのが近いかなと感じている。</p>\\n</blockquote>\\n<p>これがわかりやすいですね。\\nReact単独で考えると、少ないAPIを覚えるだけで良いけど、結局Reduxとかを使ったりで悩みが出てくる。\\nそれを超えると、SFCなんかで役割をきれいに分割しつつ、大規模にも耐えやすい。</p>\\n<p>逆にVue.jsは便利なAPIがいろいろあって、そのへんをうまく使っていけば、簡単に構築できる。\\n公式のライブラリも充実していて、それを利用するだけである程度のものが作れる。</p>\\n<p>というイメージがあるだけで、ちゃんと実装したことがあまり無いので、ちゃんとやらないとなぁと。\\nまた、変化の速度も速そうなので、式年遷宮していきつつ、手を動かしていかないと付いていけないですね。</p>\\n<h2>自社コーポレートサイトにサイト内検索を導入しました ｜ Developers.IO</h2>\\n<p><a href=\\\"https://dev.classmethod.jp/server-side/elasticsearch/site-search-in-corporate-site/\\\">https://dev.classmethod.jp/server-side/elasticsearch/site-search-in-corporate-site/</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/aws/\\\">AWS</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/elasticsearch/\\\">Elasticsearch</a>\\n  </li>\\n</ul>\\n<p>“サーチテンプレートによる検索のエンドポイントのみをパブリックに開放”\\nってことが出来るのか。知らなかった。\\nフロントから直接ES呼んじゃうってのは、ちょっと不安があるけど、調べてみよう。</p>\\n<h2>Osushiに見るフロントエンドのセキュリティ // Speaker Deck</h2>\\n<p><a href=\\\"https://speakerdeck.com/shibe97/osushinijian-ruhurontoendofalsesekiyuritei\\\">https://speakerdeck.com/shibe97/osushinijian-ruhurontoendofalsesekiyuritei</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/frontend/\\\">Frontend</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/security/\\\">security</a>\\n  </li>\\n</ul>\\n<p>ちゃんとして復活したのがすごい。\\nヘッダの話とか、めんどくさがらずにちゃんとやらないとなー。</p>\\n<h2>2-wayデータバインディングが格段に実装しやすくなったAndroid data-binding 3.1.0 - Qiita</h2>\\n<p><a href=\\\"https://qiita.com/YusukeIwaki/items/3fb4e10ac87fa1c7f6ba\\\">https://qiita.com/YusukeIwaki/items/3fb4e10ac87fa1c7f6ba</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/android/\\\">Android</a>\\n  </li>\\n</ul>\\n<p>MediatorLiveData が何者か、そのうち調べる。</p>\\n<h2>3/28に公開されたRubyの脆弱性情報についてのポエム的解説 - pixiv inside</h2>\\n<p><a href=\\\"https://inside.pixiv.blog/usa/3841\\\">https://inside.pixiv.blog/usa/3841</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/ruby/\\\">Ruby</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/脆弱性/\\\">脆弱性</a>\\n  </li>\\n</ul>\\n<p>あんまり観測してなかったんですが、脆弱性がいろいろ公開されてたんですね。\\nWEBrickのサーバーを迂闊に公開せず、信用できない値をそのまま使わない。ってことですかね。\\n兼業でRubyも書く自分にとっても、ゆるい感じで分かりやすくてよかった。</p>\\n<h2>技術的負債のパターンと悪影響・原因・返却方法について考える - $shibayu36->blog;</h2>\\n<p><a href=\\\"http://blog.shibayu36.org/entry/2018/03/29/183000\\\">http://blog.shibayu36.org/entry/2018/03/29/183000</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/android/\\\">Android</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/設計/\\\">設計</a>\\n  </li>\\n</ul>\\n<p>負債と一言に言っちゃうけど、その中にはいろんな選択があって、そこから引き起こされる問題も、その解消方法もちがうよね。\\n分類して、対応規模・緊急度を可視化出来れば、機能実装との優先度付けもできそう。\\nなるほど。</p>\\n<h2>デザインの実装を解体する技術</h2>\\n<p><a href=\\\"https://speakerdeck.com/operando/dezainfalseshi-zhuang-wojie-ti-suruji-shu\\\">https://speakerdeck.com/operando/dezainfalseshi-zhuang-wojie-ti-suruji-shu</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/android/\\\">Android</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/design/\\\">Design</a>\\n  </li>\\n</ul>\\n<p>後半のapk引っこ抜くあたりはグレーな気がするけど、adbコマンドでいろいろ出来るってのは勉強になった。</p>\",\"fields\":{\"tagSlugs\":[\"/tags/android/\",\"/tags/ci/\",\"/tags/security/\",\"/tags/frontend/\",\"/tags/react/\",\"/tags/vue-js/\",\"/tags/aws/\",\"/tags/elasticsearch/\",\"/tags/ruby/\",\"/tags/脆弱性/\",\"/tags/設計/\",\"/tags/design/\"]},\"frontmatter\":{\"title\":\"Weekly news at 2018/04/03\",\"tags\":[\"Android\",\"CI\",\"security\",\"Frontend\",\"React\",\"Vue.js\",\"AWS\",\"Elasticsearch\",\"Ruby\",\"脆弱性\",\"設計\",\"Design\"],\"date\":\"2018-04-07T23:46:37.121Z\",\"description\":\"2018/04/03のウィークリーニュース\"}}},\"pathContext\":{\"slug\":\"/posts/weekly-news/2018/04/03/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---posts-weekly-news-2018-04-03-6f9118e54ee405d6786f.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Blog by noboru-i\",\"subtitle\":\"noboru-iのメモ的な何かです。\",\"copyright\":\"© All rights reserved.\",\"author\":{\"name\":\"noboru-i\",\"twitter\":\"noboru_i\"},\"disqusShortname\":\"\",\"url\":\"https://noboru-i.github.io/\"}},\"markdownRemark\":{\"id\":\"/home/circleci/code/src/pages/articles/2018/2018-04-03.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2>関数の話 - ( ꒪⌓꒪) ゆるよろ日記</h2>\\n<p><a href=\\\"http://yuroyoro.hatenablog.com/entry/2018/04/03/112830\\\">http://yuroyoro.hatenablog.com/entry/2018/04/03/112830</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n</ul>\\n<p>実際の業務で使わないとしても、関数型の思想に触れておくことは大事かも。</p>\\n<h2>kotlinでも検出できるCustom Lintを作成してみた - DMM inside</h2>\\n<p><a href=\\\"https://inside.dmm.com/entry/2018/04/03/kotlin-custom-lint\\\">https://inside.dmm.com/entry/2018/04/03/kotlin-custom-lint</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/android/\\\">Android</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/ci/\\\">CI</a>\\n  </li>\\n</ul>\\n<p>いろんな人とチームを組んで開発しようとすると、コードレビュー以前に機械的にチェックしたいものは増えてきますよね。\\nまた、Android標準のLintの仕組みに追加でき、Android Studio上に出てくるのは良いですね。</p>\\n<p>実装するためのおまじない？準備？はそんなに多くない印象で良いのですが、\\nPSIの構造を把握して、チェック処理実装に落とすのが難しそうな印象。</p>\\n<h2>九州商船の「弊社WEB予約サービスに対する不正アクセスに関する最終報告」は全てのエンジニアに読んでほしい - orangeitems’s diary</h2>\\n<p><a href=\\\"http://www.orangeitems.com/entry/2018/04/02/202052\\\">http://www.orangeitems.com/entry/2018/04/02/202052</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/security/\\\">security</a>\\n  </li>\\n</ul>\\n<blockquote>\\n<p>・不正アクセスは起こってみるとだいたいが稚拙なところを狙われている。技術的には高いレベルではない場合が多い。いわゆる戸締りを忘れたぐらいなレベル。しかし攻撃者は全部のドアを開けようとしてくるからタチが悪い。ドアを設けないのが一番のセキュリティー対策。</p>\\n</blockquote>\\n<p>大事ですよねー。</p>\\n<p>ただ、サービス止めたり、ログが多く出る設定にしたりってのは、サービス特性によっては難しい気がする。\\n（そもそも、そのへんの検討すらしてない、ってのはまずいでしょうけど。。）</p>\\n<p>にしても、「社外の専門家により構成される調査委員会を設置」とか、ちゃんとしてる感がすごい。固い系企業？のこういうところは見習わないといけないのかも。</p>\\n<h2>Vueを昔触った後Reactをどっぷり触ってもう一回Vueを触ってReactに戻って得た感想 – 📜inuscript🐶 – Medium</h2>\\n<p><a href=\\\"https://medium.com/inuscript/vue-and-react-comparision-6c7cb44f18ba\\\">https://medium.com/inuscript/vue-and-react-comparision-6c7cb44f18ba</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/frontend/\\\">Frontend</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/react/\\\">React</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/vue.js/\\\">Vue.js</a>\\n  </li>\\n</ul>\\n<blockquote>\\n<p>誤解を恐れずに言うと、Reactはsimple寄りで、Vueはeasy寄りというのが近いかなと感じている。</p>\\n</blockquote>\\n<p>これがわかりやすいですね。\\nReact単独で考えると、少ないAPIを覚えるだけで良いけど、結局Reduxとかを使ったりで悩みが出てくる。\\nそれを超えると、SFCなんかで役割をきれいに分割しつつ、大規模にも耐えやすい。</p>\\n<p>逆にVue.jsは便利なAPIがいろいろあって、そのへんをうまく使っていけば、簡単に構築できる。\\n公式のライブラリも充実していて、それを利用するだけである程度のものが作れる。</p>\\n<p>というイメージがあるだけで、ちゃんと実装したことがあまり無いので、ちゃんとやらないとなぁと。\\nまた、変化の速度も速そうなので、式年遷宮していきつつ、手を動かしていかないと付いていけないですね。</p>\\n<h2>自社コーポレートサイトにサイト内検索を導入しました ｜ Developers.IO</h2>\\n<p><a href=\\\"https://dev.classmethod.jp/server-side/elasticsearch/site-search-in-corporate-site/\\\">https://dev.classmethod.jp/server-side/elasticsearch/site-search-in-corporate-site/</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/aws/\\\">AWS</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/elasticsearch/\\\">Elasticsearch</a>\\n  </li>\\n</ul>\\n<p>“サーチテンプレートによる検索のエンドポイントのみをパブリックに開放”\\nってことが出来るのか。知らなかった。\\nフロントから直接ES呼んじゃうってのは、ちょっと不安があるけど、調べてみよう。</p>\\n<h2>Osushiに見るフロントエンドのセキュリティ // Speaker Deck</h2>\\n<p><a href=\\\"https://speakerdeck.com/shibe97/osushinijian-ruhurontoendofalsesekiyuritei\\\">https://speakerdeck.com/shibe97/osushinijian-ruhurontoendofalsesekiyuritei</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/frontend/\\\">Frontend</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/security/\\\">security</a>\\n  </li>\\n</ul>\\n<p>ちゃんとして復活したのがすごい。\\nヘッダの話とか、めんどくさがらずにちゃんとやらないとなー。</p>\\n<h2>2-wayデータバインディングが格段に実装しやすくなったAndroid data-binding 3.1.0 - Qiita</h2>\\n<p><a href=\\\"https://qiita.com/YusukeIwaki/items/3fb4e10ac87fa1c7f6ba\\\">https://qiita.com/YusukeIwaki/items/3fb4e10ac87fa1c7f6ba</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/android/\\\">Android</a>\\n  </li>\\n</ul>\\n<p>MediatorLiveData が何者か、そのうち調べる。</p>\\n<h2>3/28に公開されたRubyの脆弱性情報についてのポエム的解説 - pixiv inside</h2>\\n<p><a href=\\\"https://inside.pixiv.blog/usa/3841\\\">https://inside.pixiv.blog/usa/3841</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/ruby/\\\">Ruby</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/脆弱性/\\\">脆弱性</a>\\n  </li>\\n</ul>\\n<p>あんまり観測してなかったんですが、脆弱性がいろいろ公開されてたんですね。\\nWEBrickのサーバーを迂闊に公開せず、信用できない値をそのまま使わない。ってことですかね。\\n兼業でRubyも書く自分にとっても、ゆるい感じで分かりやすくてよかった。</p>\\n<h2>技術的負債のパターンと悪影響・原因・返却方法について考える - $shibayu36->blog;</h2>\\n<p><a href=\\\"http://blog.shibayu36.org/entry/2018/03/29/183000\\\">http://blog.shibayu36.org/entry/2018/03/29/183000</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/android/\\\">Android</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/設計/\\\">設計</a>\\n  </li>\\n</ul>\\n<p>負債と一言に言っちゃうけど、その中にはいろんな選択があって、そこから引き起こされる問題も、その解消方法もちがうよね。\\n分類して、対応規模・緊急度を可視化出来れば、機能実装との優先度付けもできそう。\\nなるほど。</p>\\n<h2>デザインの実装を解体する技術</h2>\\n<p><a href=\\\"https://speakerdeck.com/operando/dezainfalseshi-zhuang-wojie-ti-suruji-shu\\\">https://speakerdeck.com/operando/dezainfalseshi-zhuang-wojie-ti-suruji-shu</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/android/\\\">Android</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/design/\\\">Design</a>\\n  </li>\\n</ul>\\n<p>後半のapk引っこ抜くあたりはグレーな気がするけど、adbコマンドでいろいろ出来るってのは勉強になった。</p>\",\"fields\":{\"tagSlugs\":[\"/tags/android/\",\"/tags/ci/\",\"/tags/security/\",\"/tags/frontend/\",\"/tags/react/\",\"/tags/vue-js/\",\"/tags/aws/\",\"/tags/elasticsearch/\",\"/tags/ruby/\",\"/tags/脆弱性/\",\"/tags/設計/\",\"/tags/design/\"]},\"frontmatter\":{\"title\":\"Weekly news at 2018/04/03\",\"tags\":[\"Android\",\"CI\",\"security\",\"Frontend\",\"React\",\"Vue.js\",\"AWS\",\"Elasticsearch\",\"Ruby\",\"脆弱性\",\"設計\",\"Design\"],\"date\":\"2018-04-07T23:46:37.121Z\",\"description\":\"2018/04/03のウィークリーニュース\"}}},\"pathContext\":{\"slug\":\"/posts/weekly-news/2018/04/03/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/posts-weekly-news-2018-04-03.json\n// module id = 394\n// module chunks = 232255018994465"],"sourceRoot":""}