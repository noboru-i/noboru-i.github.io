webpackJsonp([79745137178459],{395:function(s,t){s.exports={data:{site:{siteMetadata:{title:"Blog by noboru-i",subtitle:"noboru-iのメモ的な何かです。",copyright:"© All rights reserved.",author:{name:"noboru-i",twitter:"noboru_i"},disqusShortname:"",url:"https://noboru-i.github.io/"}},markdownRemark:{id:"/home/circleci/code/src/pages/articles/2018/2018-04-06.md absPath of file >>> MarkdownRemark",html:'<h2>コードレビューの機械的な指摘はDangerに任せる - LCL Engineers’ Blog</h2>\n<p><a href="http://techblog.lclco.com/entry/2017/12/29/211627">http://techblog.lclco.com/entry/2017/12/29/211627</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/ci/">CI</a>\n  </li>\n</ul>\n<p><code class="language-text">danger.import_dangerfile</code> を利用して、組織独自の共通チェックを切り出しておくのは良さそう。</p>\n<p>ただ、受託の会社で、各案件で利用しているチケット管理ツール・運営方法などが違ってる場合には、「共通チェック」として切り出せるものはかなり限定的になりそう。。？</p>\n<h2>API 設計ガイド  |  Cloud API  |  Google Cloud</h2>\n<p><a href="https://cloud.google.com/apis/design/?hl=ja">https://cloud.google.com/apis/design/?hl=ja</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/設計/">設計</a>\n  </li>\n</ul>\n<p>もともとあったドキュメントが、最近日本語化された感じ？</p>\n<p>gRPCの話だったら、個人的にはあんまり使わないかなーと思ったけど、REST APIの話も含まれているっぽいので、あとで読む。\n結構ボリュームありそう。。。</p>\n<h2>開発現場に学ぶ、円滑なコードレビューに必要な8つの手法 〜手段から準備、実施時期まで徹底解説〜 - エンジニアHub｜若手Webエンジニアのキャリアを考える！</h2>\n<p><a href="https://employment.en-japan.com/engineerhub/entry/2018/04/03/110000">https://employment.en-japan.com/engineerhub/entry/2018/04/03/110000</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/teamwork/">teamwork</a>\n  </li>\n</ul>\n<p>ソニックガーデンの方の記事。</p>\n<p>「ルールを決める」ってのは確かに重要ですね。また、そのルールを定期的に確認・レビューしていくのも必要ですね。（スプリントの開始・終了あたりのタイミングとか？）</p>\n<p>コードレビュー数ランキング、面白そうだと思ったけど、弊社だとお客さん環境でレビューしてたりするので、平等なランキングを作るのは難しそう。自社organizationだけランキング、なら作れるかも？</p>\n<p>「質問する」という前提も共有しておく必要がありますね。<br>\n海外のエンジニアとやり取りすることが多いので、「Why did you use XXX instead of YYY?」とか書いた時に煽ってると勘違いされない関係性の作成が必要。（英語力が足りない、ってのもある）</p>\n<h2>【完全新機能】DB認証情報やOAuthキーを一元管理可能なAWS Secrets Managerが発表されました！ ｜ Developers.IO</h2>\n<p><a href="https://dev.classmethod.jp/cloud/aws/secrets-manager/">https://dev.classmethod.jp/cloud/aws/secrets-manager/</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/aws/">AWS</a>\n  </li>\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/security/">security</a>\n  </li>\n</ul>\n<p>RDSへの接続情報ローテーションを、簡単に設定できるのか。</p>\n<p>それと、個別のkey : valueを設定しておいて、AWSのSDKを利用して取得してこれるっぽい。\nVaultと同じようなイメージかもしれないけど、全部をAWSが管理してくれるのは楽ですね。\n「機密情報１つあたり、$0.40/月」 ってのは、地味に高いかもしれないですが。。</p>\n<h2>【小ネタ】CircleCIのManual Approvalを利用したシンプルなブランチ/タグ運用 ｜ Developers.IO</h2>\n<p><a href="https://dev.classmethod.jp/ci/simple-branch-tag-operations-with-circleci-manual-approval/">https://dev.classmethod.jp/ci/simple-branch-tag-operations-with-circleci-manual-approval/</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/cd/">CD</a>\n  </li>\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/ci/">CI</a>\n  </li>\n</ul>\n<p>dev.classmethod.jp/ci/simple-bran…\n個人的には、2の方法にしちゃうことが多いかなぁ。\nPRの形にしておけば、その差分が見えるし。（たいてい、量が多くて見てないけど）</p>\n<p>ただ、Manual Approvalは良さげ。何かのタイミングで使ってみよう。</p>\n<h2>見てるページを全部保存するという行ない - Diary</h2>\n<p><a href="https://diary.app.ssig33.com/347">https://diary.app.ssig33.com/347</a></p>\n<ul class="post-single__tags-list">\n</ul>\n<blockquote>\n<p>「どっかで見たと思うんだけどどこにあるか思い出せない」みたいな情報も「自分が見た範囲内から検索」ができるとあっさり見つかったりします。</p>\n</blockquote>\n<p>これがしたかった。\nただ、PDFまでは考えてなかったなー。\nGoogle driveと連携させるってのも頭良いな。</p>\n<h2>Amazon Elasticsearch Service の Kibana にログイン機能を追加できるようになりました ｜ Developers.IO</h2>\n<p><a href="https://dev.classmethod.jp/cloud/aws/amazon-elasticsearch-service-kibana-user-authentication/">https://dev.classmethod.jp/cloud/aws/amazon-elasticsearch-service-kibana-user-authentication/</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/aws/">AWS</a>\n  </li>\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/elasticsearch/">Elasticsearch</a>\n  </li>\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/kibana/">Kibana</a>\n  </li>\n</ul>\n<p>ようやくKibanaにログイン機能が！\n昔、一瞬使ってみたときは認証周りがめんどーだったので止めたことが。。</p>\n<p>cognitoを使うっぽい。こっちもまともに使ったことないので、一度やってみたいなー。</p>\n<h2>(デザイン初心者向け)メルカリのデザインチュートリアルを作ってみた(ホーム画面UI編)｜ココディー｜note</h2>\n<p><a href="https://note.mu/co_co_d3/n/n4e910ec83b60">https://note.mu/co<em>co</em>d3/n/n4e910ec83b60</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/design/">Design</a>\n  </li>\n</ul>\n<p>単純にsketchの始め方としてもいい記事。\nデザインセンスが壊滅的なので、こんな感じでトレースしてったら、いい感じのデザインが出来るようになるかな。。優先度の問題はあるけど。</p>\n<h2>関数の話 - ( ꒪⌓꒪) ゆるよろ日記</h2>\n<p><a href="http://yuroyoro.hatenablog.com/entry/2018/04/03/112830">http://yuroyoro.hatenablog.com/entry/2018/04/03/112830</a></p>\n<ul class="post-single__tags-list">\n</ul>\n<p>実際の業務で使わないとしても、関数型の思想に触れておくことは大事かも。</p>\n<h2>kotlinでも検出できるCustom Lintを作成してみた - DMM inside</h2>\n<p><a href="https://inside.dmm.com/entry/2018/04/03/kotlin-custom-lint">https://inside.dmm.com/entry/2018/04/03/kotlin-custom-lint</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/android/">Android</a>\n  </li>\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/ci/">CI</a>\n  </li>\n</ul>\n<p>いろんな人とチームを組んで開発しようとすると、コードレビュー以前に機械的にチェックしたいものは増えてきますよね。\nまた、Android標準のLintの仕組みに追加でき、Android Studio上に出てくるのは良いですね。</p>\n<p>実装するためのおまじない？準備？はそんなに多くない印象で良いのですが、\nPSIの構造を把握して、チェック処理実装に落とすのが難しそうな印象。</p>\n<h2>九州商船の「弊社WEB予約サービスに対する不正アクセスに関する最終報告」は全てのエンジニアに読んでほしい - orangeitems’s diary</h2>\n<p><a href="http://www.orangeitems.com/entry/2018/04/02/202052">http://www.orangeitems.com/entry/2018/04/02/202052</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/security/">security</a>\n  </li>\n</ul>\n<blockquote>\n<p>・不正アクセスは起こってみるとだいたいが稚拙なところを狙われている。技術的には高いレベルではない場合が多い。いわゆる戸締りを忘れたぐらいなレベル。しかし攻撃者は全部のドアを開けようとしてくるからタチが悪い。ドアを設けないのが一番のセキュリティー対策。</p>\n</blockquote>\n<p>大事ですよねー。</p>\n<p>ただ、サービス止めたり、ログが多く出る設定にしたりってのは、サービス特性によっては難しい気がする。\n（そもそも、そのへんの検討すらしてない、ってのはまずいでしょうけど。。）</p>\n<p>にしても、「社外の専門家により構成される調査委員会を設置」とか、ちゃんとしてる感がすごい。固い系企業？のこういうところは見習わないといけないのかも。</p>\n<h2>Vueを昔触った後Reactをどっぷり触ってもう一回Vueを触ってReactに戻って得た感想 – 📜inuscript🐶 – Medium</h2>\n<p><a href="https://medium.com/inuscript/vue-and-react-comparision-6c7cb44f18ba">https://medium.com/inuscript/vue-and-react-comparision-6c7cb44f18ba</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/frontend/">Frontend</a>\n  </li>\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/react/">React</a>\n  </li>\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/vue.js/">Vue.js</a>\n  </li>\n</ul>\n<blockquote>\n<p>誤解を恐れずに言うと、Reactはsimple寄りで、Vueはeasy寄りというのが近いかなと感じている。</p>\n</blockquote>\n<p>これがわかりやすいですね。\nReact単独で考えると、少ないAPIを覚えるだけで良いけど、結局Reduxとかを使ったりで悩みが出てくる。\nそれを超えると、SFCなんかで役割をきれいに分割しつつ、大規模にも耐えやすい。</p>\n<p>逆にVue.jsは便利なAPIがいろいろあって、そのへんをうまく使っていけば、簡単に構築できる。\n公式のライブラリも充実していて、それを利用するだけである程度のものが作れる。</p>\n<p>というイメージがあるだけで、ちゃんと実装したことがあまり無いので、ちゃんとやらないとなぁと。\nまた、変化の速度も速そうなので、式年遷宮していきつつ、手を動かしていかないと付いていけないですね。</p>\n<h2>自社コーポレートサイトにサイト内検索を導入しました ｜ Developers.IO</h2>\n<p><a href="https://dev.classmethod.jp/server-side/elasticsearch/site-search-in-corporate-site/">https://dev.classmethod.jp/server-side/elasticsearch/site-search-in-corporate-site/</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/aws/">AWS</a>\n  </li>\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/elasticsearch/">Elasticsearch</a>\n  </li>\n</ul>\n<p>“サーチテンプレートによる検索のエンドポイントのみをパブリックに開放”\nってことが出来るのか。知らなかった。\nフロントから直接ES呼んじゃうってのは、ちょっと不安があるけど、調べてみよう。</p>\n<h2>Osushiに見るフロントエンドのセキュリティ // Speaker Deck</h2>\n<p><a href="https://speakerdeck.com/shibe97/osushinijian-ruhurontoendofalsesekiyuritei">https://speakerdeck.com/shibe97/osushinijian-ruhurontoendofalsesekiyuritei</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/frontend/">Frontend</a>\n  </li>\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/security/">security</a>\n  </li>\n</ul>\n<p>ちゃんとして復活したのがすごい。\nヘッダの話とか、めんどくさがらずにちゃんとやらないとなー。</p>\n<h2>2-wayデータバインディングが格段に実装しやすくなったAndroid data-binding 3.1.0 - Qiita</h2>\n<p><a href="https://qiita.com/YusukeIwaki/items/3fb4e10ac87fa1c7f6ba">https://qiita.com/YusukeIwaki/items/3fb4e10ac87fa1c7f6ba</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/android/">Android</a>\n  </li>\n</ul>\n<p>MediatorLiveData が何者か、そのうち調べる。</p>\n<h2>3/28に公開されたRubyの脆弱性情報についてのポエム的解説 - pixiv inside</h2>\n<p><a href="https://inside.pixiv.blog/usa/3841">https://inside.pixiv.blog/usa/3841</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/ruby/">Ruby</a>\n  </li>\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/脆弱性/">脆弱性</a>\n  </li>\n</ul>\n<p>あんまり観測してなかったんですが、脆弱性がいろいろ公開されてたんですね。\nWEBrickのサーバーを迂闊に公開せず、信用できない値をそのまま使わない。ってことですかね。\n兼業でRubyも書く自分にとっても、ゆるい感じで分かりやすくてよかった。</p>\n<h2>技術的負債のパターンと悪影響・原因・返却方法について考える - $shibayu36->blog;</h2>\n<p><a href="http://blog.shibayu36.org/entry/2018/03/29/183000">http://blog.shibayu36.org/entry/2018/03/29/183000</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/android/">Android</a>\n  </li>\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/設計/">設計</a>\n  </li>\n</ul>\n<p>負債と一言に言っちゃうけど、その中にはいろんな選択があって、そこから引き起こされる問題も、その解消方法もちがうよね。\n分類して、対応規模・緊急度を可視化出来れば、機能実装との優先度付けもできそう。\nなるほど。</p>\n<h2>デザインの実装を解体する技術</h2>\n<p><a href="https://speakerdeck.com/operando/dezainfalseshi-zhuang-wojie-ti-suruji-shu">https://speakerdeck.com/operando/dezainfalseshi-zhuang-wojie-ti-suruji-shu</a></p>\n<ul class="post-single__tags-list">\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/android/">Android</a>\n  </li>\n  <li class="post-single__tags-list-item">\n    <a class="post-single__tags-list-item-link" href="/tags/design/">Design</a>\n  </li>\n</ul>\n<p>後半のapk引っこ抜くあたりはグレーな気がするけど、adbコマンドでいろいろ出来るってのは勉強になった。</p>',fields:{tagSlugs:["/tags/ci/","/tags/設計/","/tags/teamwork/","/tags/aws/","/tags/security/","/tags/cd/","/tags/elasticsearch/","/tags/kibana/","/tags/design/","/tags/android/","/tags/frontend/","/tags/react/","/tags/vue-js/","/tags/ruby/","/tags/脆弱性/"]},frontmatter:{title:"Weekly news at 2018/04/06",tags:["CI","設計","teamwork","AWS","security","CD","Elasticsearch","Kibana","Design","Android","Frontend","React","Vue.js","Ruby","脆弱性"],date:"2018-04-07T23:46:37.121Z",description:"2018/04/06のウィークリーニュース"}}},pathContext:{slug:"/posts/weekly-news/2018/04/06/"}}}});
//# sourceMappingURL=path---posts-weekly-news-2018-04-06-db75043115290bf45c2a.js.map