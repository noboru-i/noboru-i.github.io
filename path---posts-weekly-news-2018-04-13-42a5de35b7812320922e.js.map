{"version":3,"sources":["webpack:///path---posts-weekly-news-2018-04-13-42a5de35b7812320922e.js","webpack:///./.cache/json/posts-weekly-news-2018-04-13.json"],"names":["webpackJsonp","425","module","exports","data","site","siteMetadata","title","subtitle","copyright","author","name","twitter","disqusShortname","url","markdownRemark","id","html","fields","tagSlugs","frontmatter","tags","date","description","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,mBAAAC,SAAA,qBAAAC,UAAA,yBAAAC,QAA0GC,KAAA,WAAAC,QAAA,YAAuCC,gBAAA,GAAAC,IAAA,gCAA2DC,gBAAmBC,GAAA,+FAAAC,KAAA,8rPAAAC,QAAi9PC,UAAA,sNAAiOC,aAAgBb,MAAA,4BAAAc,MAAA,yHAAAC,KAAA,4BAAAC,YAAA,2BAAgPC,aAAgBC,KAAA","file":"path---posts-weekly-news-2018-04-13-42a5de35b7812320922e.js","sourcesContent":["webpackJsonp([82758719011844],{\n\n/***/ 425:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Blog by noboru-i\",\"subtitle\":\"noboru-iのメモ的な何かです。\",\"copyright\":\"© All rights reserved.\",\"author\":{\"name\":\"noboru-i\",\"twitter\":\"noboru_i\"},\"disqusShortname\":\"\",\"url\":\"https://noboru-i.github.io/\"}},\"markdownRemark\":{\"id\":\"/home/circleci/code/src/pages/articles/2018/2018-04-13.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2>Gitのブランチ名を返すエイリアスを設定したら地味に捗った - Qiita</h2>\\n<p><a href=\\\"https://qiita.com/kmszk/items/3de61ef75e30dedd6f6e\\\">https://qiita.com/kmszk/items/3de61ef75e30dedd6f6e</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/git/\\\">Git</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/shell/\\\">Shell</a>\\n  </li>\\n</ul>\\n<p>aliasを設定して、それを利用してGitのコマンドを使うようになったら便利だった、という話。</p>\\n<p><code class=\\\"language-text\\\">git push</code> とかは、オプション設定したら良いのでは？と思わなくもないですが。</p>\\n<p>ただ、実行するコマンドが同一になることで、補完が効きやすい、というのは良いですね。</p>\\n<h2>システムで「性別」の情報を扱う前に知っておくべきこと - Qiita</h2>\\n<p><a href=\\\"https://qiita.com/aoshirobo/items/32deb45cb8c8b87d65a4\\\">https://qiita.com/aoshirobo/items/32deb45cb8c8b87d65a4</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/設計/\\\">設計</a>\\n  </li>\\n</ul>\\n<p>システムで性別を扱う場合に考えることなど。</p>\\n<p>たしかに、何も考えずに「会員登録時に生年月日と性別とぐらい入れさせるか」としてしまうことはある気がします。</p>\\n<p>「本当に入力させる必要がある？」というのは、確認したほうが良いですね。</p>\\n<p>また、コード体系がISO 5218として定められている、というのも知りませんでした。\\nたしかに、どうやってコード化する？というのはどーでもいい反面、悩み始めると終わらないものなので、「国際規格がこう言っているから」というのがあるのは助かりますね。</p>\\n<h2>React Redux Real World Examples 〜先人から学ぶReact Reduxの知恵〜 | blog.tai2.net</h2>\\n<p><a href=\\\"https://blog.tai2.net/real-world-redux.html\\\">https://blog.tai2.net/real-world-redux.html</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/frontend/\\\">Frontend</a>\\n  </li>\\n</ul>\\n<p>Reduxで設計・実装する際に悩みそうな部分を、実際に使われているアプリケーションのコードを読み解くことで解決しようとしている。</p>\\n<p>他のアプリケーションのコードを読んで見ることはあるけど、ここまで多数のアプリを、一定の関心事ごとに読んでいく、というのはやったことなかった。\\nここまでまとまってると、Reduxについて他に悩んだことが出てきた場合にも、これを手がかりにコードを読み進めることができそう。</p>\\n<p>ただ、実際にReduxによる実装をしたことが無いので、始めるとき・悩んだときにはこれを読み、コードを読んで活かしていきたい。</p>\\n<h2>メルカリ Microservices Team による Terraform 運用とその中で開発したOSSの紹介 - Mercari Engineering Blog</h2>\\n<p><a href=\\\"http://tech.mercari.com/entry/2018/04/09/110000\\\">http://tech.mercari.com/entry/2018/04/09/110000</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/infra/\\\">Infra</a>\\n  </li>\\n</ul>\\n<p>Terraformの運用していく中で、 mercari/tfnotify を作った話。</p>\\n<p>現在のメルカリでは、 <em>中央集権的なリポジトリですべての Terraform コードを管理</em> しているらしい。\\nなるほど。</p>\\n<p>重複したタイトル・メッセージだったら、古いコメントを削除するなど、実際に運用している感があっていいですね。</p>\\n<p>「GitHubのPRにコメントする」と聞くとDangerをすぐに連想しましたが、ここまで特化しているものだと、個別のアプリケーションにしてしまって正解なのかも。（特に言及もされてないけど。）</p>\\n<p>本筋からはずれますが、 <a href=\\\"https://github.com/noboru-i/danger-checkstyle_format\\\">noboru-i/danger-checkstyle_format</a> のREADMEにも、こんな感じでキャプチャ付けておくのが良さそう、と思いました。</p>\\n<h2>Ruby on Rails 5.2正式版発表。Active Storageによるクラウドストレージ対応、Redisでのキャッシュ対応など － Publickey</h2>\\n<p><a href=\\\"http://www.publickey1.jp/blog/18/ruby_on_rails_52active_storageredis.html\\\">http://www.publickey1.jp/blog/18/ruby<em>on</em>rails<em>52active</em>storageredis.html</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/ruby/\\\">Ruby</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/ruby on rails/\\\">Ruby on Rails</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/security/\\\">security</a>\\n  </li>\\n</ul>\\n<p>ちょうど<code class=\\\"language-text\\\">rails new</code>したところだったけど、Rails 5.2.0って出たばっかりだったのね。</p>\\n<p>Active Storageによる、S3とActive Recordの連携は、仕事でも使う場面がありそうな組み合わせなので、一度体験しておいた方が良さそう。</p>\\n<p>Content Security Policyは、最近のセキュリティに対する意識の高まりから、勉強しておいたほうが良さそう。\\nDSLで書くにしても、もとを知らないと書けないし。</p>\\n<p>それにしても、Railsはまだ新しい機能を追加していくんですね。</p>\\n<h2>Nuxt.jsとFirebaseでSPA×SSR×PWA×サーバーレスを実現する - DMM inside</h2>\\n<p><a href=\\\"https://inside.dmm.com/entry/2018/04/10/nuxt-firebase\\\">https://inside.dmm.com/entry/2018/04/10/nuxt-firebase</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/frontend/\\\">Frontend</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/pwa/\\\">PWA</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/serverless/\\\">Serverless</a>\\n  </li>\\n</ul>\\n<p>DMMの中の人が、タイトル通りの構成を作る話。</p>\\n<p>前半で、Nuxt.jsやSPAについて簡単に説明してあり、非エンジニアには最初にこのぐらい説明したらいいのかなーと、参考になった。</p>\\n<p>Cloud FunctionsでNuxt.jsを動作させてしまう、ってのはちょっと特殊かも？と思いました。\\nまた、そのために古いバージョンのNuxt.jsを使うのも、仕方ないとはいえ、微妙だなーと。\\nAWS Lambdaなら最近v8系サポートされたので、Lambdaの方が良いかも？とは思います。</p>\\n<p>読んだだけだと、srcとfunctionsディレクトリの存在がいまいちわからなかったので、ちゃんと理解するためには、一度写経してみる必要がありそう。</p>\\n<h2>React Nativeで自社サービスのiOS/Androidアプリをリプレイスした話 - ぴよログ</h2>\\n<p><a href=\\\"https://blog.piyo.tech/posts/2018-04-11-react-native/\\\">https://blog.piyo.tech/posts/2018-04-11-react-native/</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/react native/\\\">React Native</a>\\n  </li>\\n</ul>\\n<p>ソニックガーデンで、Remottyのネイティブアプリをリプレースして、React Nativeで再実装した話。</p>\\n<p>iOS/Android個別にリソースをかけられない場合に、React Nativeという選択肢はたしかにアリだと思う。\\nただ、バージョンアップとかが早いので、それなりの工数を継続的にかけてアップデートしてった方が良さそう。</p>\\n<p>ちょうどReact Nativeを触っているので、各種の「これ使ってる」が参考になりました。</p>\\n<p>Androidが弱そう、というのはあまり意識してなかったので、ライブラリ単位などで確認しながら進める必要がありますね。</p>\\n<h2>Github projectsが実際に使えるレベルになっていたのでみんな使っていいと思う - そーだいなるらくがき帳</h2>\\n<p><a href=\\\"https://soudai.hatenablog.com/entry/2018/04/10/103218\\\">https://soudai.hatenablog.com/entry/2018/04/10/103218</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/github/\\\">GitHub</a>\\n  </li>\\n</ul>\\n<p>私も、出た当初に期待して調べてみたら、いろいろ出来なくて使わなくなってた。</p>\\n<p>この記事読んだら、良くなってるっぽいので、一度個人的に使ってみようと思う。</p>\\n<h2>Pull RequestごとにStorybookがビルドされたら最高じゃね？ - Studio Andy</h2>\\n<p><a href=\\\"http://studio-andy.hatenablog.com/entry/2018/04/08/001436\\\">http://studio-andy.hatenablog.com/entry/2018/04/08/001436</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/ci/\\\">CI</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/frontend/\\\">Frontend</a>\\n  </li>\\n</ul>\\n<p>Storybookを手軽に確認できる環境づくりの話。</p>\\n<p>Storybook自体、まだ使ったこと無いですが、UIパーツを確認しやすそうでいいですよね。</p>\\n<p>また、PRのタイミングで環境を作って壊す、というのも良いですね。Heroku Review Appsもうまく使えば便利そう。</p>\\n<h2>初見から実務でReact NativeやったAndroidエンジニアが社内LTで所感を共有しました – AnyPay Tech Blog – Medium</h2>\\n<p><a href=\\\"https://medium.com/anypay-tech-blog/bbca760f8c7f\\\">https://medium.com/anypay-tech-blog/bbca760f8c7f</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/react native/\\\">React Native</a>\\n  </li>\\n</ul>\\n<p>Androidエンジニアが、React Nativeを実務でやってみた話。</p>\\n<p>たしかに、エラー起こった時の調査が難しい気はしている。\\n構成要素増えるので、仕方ない部分ではあるけど。</p>\\n<p>個人的にもReact Nativeでアプリを作ろうとしているけど、まだRedux使うところまで進んでないので、がんばる。</p>\\n<p>にしても、社内でLTやったり、ってのはいいですね。</p>\\n<h2>ゼロから始めるPWA入門 // Speaker Deck</h2>\\n<p><a href=\\\"https://speakerdeck.com/syumai/zerokarashi-merupwaru-men\\\">https://speakerdeck.com/syumai/zerokarashi-merupwaru-men</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/frontend/\\\">Frontend</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/pwa/\\\">PWA</a>\\n  </li>\\n</ul>\\n<p>PWAの概要と開発に関するTipsがうまくまとまってるスライド。</p>\\n<p>Dev Toolsの使い方とか、Lighthouseについてとかも書いてあるので、開発する前にさらっと見直すのが良さそう。</p>\",\"fields\":{\"tagSlugs\":[\"/tags/git/\",\"/tags/shell/\",\"/tags/設計/\",\"/tags/frontend/\",\"/tags/infra/\",\"/tags/ruby/\",\"/tags/ruby-on-rails/\",\"/tags/security/\",\"/tags/pwa/\",\"/tags/serverless/\",\"/tags/react-native/\",\"/tags/git-hub/\",\"/tags/ci/\"]},\"frontmatter\":{\"title\":\"Weekly news at 2018/04/13\",\"tags\":[\"Git\",\"Shell\",\"設計\",\"Frontend\",\"Infra\",\"Ruby\",\"Ruby on Rails\",\"security\",\"PWA\",\"Serverless\",\"React Native\",\"GitHub\",\"CI\"],\"date\":\"2018-04-13T17:01:06+00:00\",\"description\":\"2018/04/13のウィークリーニュース\"}}},\"pathContext\":{\"slug\":\"/posts/weekly-news/2018/04/13/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---posts-weekly-news-2018-04-13-42a5de35b7812320922e.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Blog by noboru-i\",\"subtitle\":\"noboru-iのメモ的な何かです。\",\"copyright\":\"© All rights reserved.\",\"author\":{\"name\":\"noboru-i\",\"twitter\":\"noboru_i\"},\"disqusShortname\":\"\",\"url\":\"https://noboru-i.github.io/\"}},\"markdownRemark\":{\"id\":\"/home/circleci/code/src/pages/articles/2018/2018-04-13.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2>Gitのブランチ名を返すエイリアスを設定したら地味に捗った - Qiita</h2>\\n<p><a href=\\\"https://qiita.com/kmszk/items/3de61ef75e30dedd6f6e\\\">https://qiita.com/kmszk/items/3de61ef75e30dedd6f6e</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/git/\\\">Git</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/shell/\\\">Shell</a>\\n  </li>\\n</ul>\\n<p>aliasを設定して、それを利用してGitのコマンドを使うようになったら便利だった、という話。</p>\\n<p><code class=\\\"language-text\\\">git push</code> とかは、オプション設定したら良いのでは？と思わなくもないですが。</p>\\n<p>ただ、実行するコマンドが同一になることで、補完が効きやすい、というのは良いですね。</p>\\n<h2>システムで「性別」の情報を扱う前に知っておくべきこと - Qiita</h2>\\n<p><a href=\\\"https://qiita.com/aoshirobo/items/32deb45cb8c8b87d65a4\\\">https://qiita.com/aoshirobo/items/32deb45cb8c8b87d65a4</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/設計/\\\">設計</a>\\n  </li>\\n</ul>\\n<p>システムで性別を扱う場合に考えることなど。</p>\\n<p>たしかに、何も考えずに「会員登録時に生年月日と性別とぐらい入れさせるか」としてしまうことはある気がします。</p>\\n<p>「本当に入力させる必要がある？」というのは、確認したほうが良いですね。</p>\\n<p>また、コード体系がISO 5218として定められている、というのも知りませんでした。\\nたしかに、どうやってコード化する？というのはどーでもいい反面、悩み始めると終わらないものなので、「国際規格がこう言っているから」というのがあるのは助かりますね。</p>\\n<h2>React Redux Real World Examples 〜先人から学ぶReact Reduxの知恵〜 | blog.tai2.net</h2>\\n<p><a href=\\\"https://blog.tai2.net/real-world-redux.html\\\">https://blog.tai2.net/real-world-redux.html</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/frontend/\\\">Frontend</a>\\n  </li>\\n</ul>\\n<p>Reduxで設計・実装する際に悩みそうな部分を、実際に使われているアプリケーションのコードを読み解くことで解決しようとしている。</p>\\n<p>他のアプリケーションのコードを読んで見ることはあるけど、ここまで多数のアプリを、一定の関心事ごとに読んでいく、というのはやったことなかった。\\nここまでまとまってると、Reduxについて他に悩んだことが出てきた場合にも、これを手がかりにコードを読み進めることができそう。</p>\\n<p>ただ、実際にReduxによる実装をしたことが無いので、始めるとき・悩んだときにはこれを読み、コードを読んで活かしていきたい。</p>\\n<h2>メルカリ Microservices Team による Terraform 運用とその中で開発したOSSの紹介 - Mercari Engineering Blog</h2>\\n<p><a href=\\\"http://tech.mercari.com/entry/2018/04/09/110000\\\">http://tech.mercari.com/entry/2018/04/09/110000</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/infra/\\\">Infra</a>\\n  </li>\\n</ul>\\n<p>Terraformの運用していく中で、 mercari/tfnotify を作った話。</p>\\n<p>現在のメルカリでは、 <em>中央集権的なリポジトリですべての Terraform コードを管理</em> しているらしい。\\nなるほど。</p>\\n<p>重複したタイトル・メッセージだったら、古いコメントを削除するなど、実際に運用している感があっていいですね。</p>\\n<p>「GitHubのPRにコメントする」と聞くとDangerをすぐに連想しましたが、ここまで特化しているものだと、個別のアプリケーションにしてしまって正解なのかも。（特に言及もされてないけど。）</p>\\n<p>本筋からはずれますが、 <a href=\\\"https://github.com/noboru-i/danger-checkstyle_format\\\">noboru-i/danger-checkstyle_format</a> のREADMEにも、こんな感じでキャプチャ付けておくのが良さそう、と思いました。</p>\\n<h2>Ruby on Rails 5.2正式版発表。Active Storageによるクラウドストレージ対応、Redisでのキャッシュ対応など － Publickey</h2>\\n<p><a href=\\\"http://www.publickey1.jp/blog/18/ruby_on_rails_52active_storageredis.html\\\">http://www.publickey1.jp/blog/18/ruby<em>on</em>rails<em>52active</em>storageredis.html</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/ruby/\\\">Ruby</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/ruby on rails/\\\">Ruby on Rails</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/security/\\\">security</a>\\n  </li>\\n</ul>\\n<p>ちょうど<code class=\\\"language-text\\\">rails new</code>したところだったけど、Rails 5.2.0って出たばっかりだったのね。</p>\\n<p>Active Storageによる、S3とActive Recordの連携は、仕事でも使う場面がありそうな組み合わせなので、一度体験しておいた方が良さそう。</p>\\n<p>Content Security Policyは、最近のセキュリティに対する意識の高まりから、勉強しておいたほうが良さそう。\\nDSLで書くにしても、もとを知らないと書けないし。</p>\\n<p>それにしても、Railsはまだ新しい機能を追加していくんですね。</p>\\n<h2>Nuxt.jsとFirebaseでSPA×SSR×PWA×サーバーレスを実現する - DMM inside</h2>\\n<p><a href=\\\"https://inside.dmm.com/entry/2018/04/10/nuxt-firebase\\\">https://inside.dmm.com/entry/2018/04/10/nuxt-firebase</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/frontend/\\\">Frontend</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/pwa/\\\">PWA</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/serverless/\\\">Serverless</a>\\n  </li>\\n</ul>\\n<p>DMMの中の人が、タイトル通りの構成を作る話。</p>\\n<p>前半で、Nuxt.jsやSPAについて簡単に説明してあり、非エンジニアには最初にこのぐらい説明したらいいのかなーと、参考になった。</p>\\n<p>Cloud FunctionsでNuxt.jsを動作させてしまう、ってのはちょっと特殊かも？と思いました。\\nまた、そのために古いバージョンのNuxt.jsを使うのも、仕方ないとはいえ、微妙だなーと。\\nAWS Lambdaなら最近v8系サポートされたので、Lambdaの方が良いかも？とは思います。</p>\\n<p>読んだだけだと、srcとfunctionsディレクトリの存在がいまいちわからなかったので、ちゃんと理解するためには、一度写経してみる必要がありそう。</p>\\n<h2>React Nativeで自社サービスのiOS/Androidアプリをリプレイスした話 - ぴよログ</h2>\\n<p><a href=\\\"https://blog.piyo.tech/posts/2018-04-11-react-native/\\\">https://blog.piyo.tech/posts/2018-04-11-react-native/</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/react native/\\\">React Native</a>\\n  </li>\\n</ul>\\n<p>ソニックガーデンで、Remottyのネイティブアプリをリプレースして、React Nativeで再実装した話。</p>\\n<p>iOS/Android個別にリソースをかけられない場合に、React Nativeという選択肢はたしかにアリだと思う。\\nただ、バージョンアップとかが早いので、それなりの工数を継続的にかけてアップデートしてった方が良さそう。</p>\\n<p>ちょうどReact Nativeを触っているので、各種の「これ使ってる」が参考になりました。</p>\\n<p>Androidが弱そう、というのはあまり意識してなかったので、ライブラリ単位などで確認しながら進める必要がありますね。</p>\\n<h2>Github projectsが実際に使えるレベルになっていたのでみんな使っていいと思う - そーだいなるらくがき帳</h2>\\n<p><a href=\\\"https://soudai.hatenablog.com/entry/2018/04/10/103218\\\">https://soudai.hatenablog.com/entry/2018/04/10/103218</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/github/\\\">GitHub</a>\\n  </li>\\n</ul>\\n<p>私も、出た当初に期待して調べてみたら、いろいろ出来なくて使わなくなってた。</p>\\n<p>この記事読んだら、良くなってるっぽいので、一度個人的に使ってみようと思う。</p>\\n<h2>Pull RequestごとにStorybookがビルドされたら最高じゃね？ - Studio Andy</h2>\\n<p><a href=\\\"http://studio-andy.hatenablog.com/entry/2018/04/08/001436\\\">http://studio-andy.hatenablog.com/entry/2018/04/08/001436</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/ci/\\\">CI</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/frontend/\\\">Frontend</a>\\n  </li>\\n</ul>\\n<p>Storybookを手軽に確認できる環境づくりの話。</p>\\n<p>Storybook自体、まだ使ったこと無いですが、UIパーツを確認しやすそうでいいですよね。</p>\\n<p>また、PRのタイミングで環境を作って壊す、というのも良いですね。Heroku Review Appsもうまく使えば便利そう。</p>\\n<h2>初見から実務でReact NativeやったAndroidエンジニアが社内LTで所感を共有しました – AnyPay Tech Blog – Medium</h2>\\n<p><a href=\\\"https://medium.com/anypay-tech-blog/bbca760f8c7f\\\">https://medium.com/anypay-tech-blog/bbca760f8c7f</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/react native/\\\">React Native</a>\\n  </li>\\n</ul>\\n<p>Androidエンジニアが、React Nativeを実務でやってみた話。</p>\\n<p>たしかに、エラー起こった時の調査が難しい気はしている。\\n構成要素増えるので、仕方ない部分ではあるけど。</p>\\n<p>個人的にもReact Nativeでアプリを作ろうとしているけど、まだRedux使うところまで進んでないので、がんばる。</p>\\n<p>にしても、社内でLTやったり、ってのはいいですね。</p>\\n<h2>ゼロから始めるPWA入門 // Speaker Deck</h2>\\n<p><a href=\\\"https://speakerdeck.com/syumai/zerokarashi-merupwaru-men\\\">https://speakerdeck.com/syumai/zerokarashi-merupwaru-men</a></p>\\n<ul class=\\\"post-single__tags-list\\\">\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/frontend/\\\">Frontend</a>\\n  </li>\\n  <li class=\\\"post-single__tags-list-item\\\">\\n    <a class=\\\"post-single__tags-list-item-link\\\" href=\\\"/tags/pwa/\\\">PWA</a>\\n  </li>\\n</ul>\\n<p>PWAの概要と開発に関するTipsがうまくまとまってるスライド。</p>\\n<p>Dev Toolsの使い方とか、Lighthouseについてとかも書いてあるので、開発する前にさらっと見直すのが良さそう。</p>\",\"fields\":{\"tagSlugs\":[\"/tags/git/\",\"/tags/shell/\",\"/tags/設計/\",\"/tags/frontend/\",\"/tags/infra/\",\"/tags/ruby/\",\"/tags/ruby-on-rails/\",\"/tags/security/\",\"/tags/pwa/\",\"/tags/serverless/\",\"/tags/react-native/\",\"/tags/git-hub/\",\"/tags/ci/\"]},\"frontmatter\":{\"title\":\"Weekly news at 2018/04/13\",\"tags\":[\"Git\",\"Shell\",\"設計\",\"Frontend\",\"Infra\",\"Ruby\",\"Ruby on Rails\",\"security\",\"PWA\",\"Serverless\",\"React Native\",\"GitHub\",\"CI\"],\"date\":\"2018-04-13T17:01:06+00:00\",\"description\":\"2018/04/13のウィークリーニュース\"}}},\"pathContext\":{\"slug\":\"/posts/weekly-news/2018/04/13/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/posts-weekly-news-2018-04-13.json\n// module id = 425\n// module chunks = 82758719011844"],"sourceRoot":""}